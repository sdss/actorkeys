KeysDictionary("sop", (2,1),
    # misc
    Key("version", String(help="EUPS/SVN version")),
    Key("text", String(), help="text for humans"),
    
    # The archiver allocates enough space for the largest possible list...
    Key("bypassNames",
       String()*(1,25),
       help="names of the systems whose errors can be ignored. Matches the values in the 'bypass' keyword"),
    Key("bypassedNames",
       String()*(0,25),
       help="List of named systems currently being bypassed."),

    Key("surveyCommands", String()*(1,12),
        help="List of SOP commands which are appropriate to and required for the loaded plate's operations"),
    
    Key("survey",
        String(name="plateType", invalid="?", help="The survey type of this plate."),
        String(name="surveyMode", invalid="?", help="The instrument driving this observation, and its observing mode."),
        help="Which surveys is this plate for, as SOP knows them to be (e.g., with bypasses).",
    ),

    Key("apogeeDitherSet",
        String(name="ditherSet", help="The requested APOGEE dither set."),
        Int(name="index", help="The current index into ditherSet; len()+1 when the set is complete."),
        help="To keep track of sets of APOGEE exposures (usually pairs)."),
    
    Key("doBossCalibsStages", String()*(1,6), help="names of the doBossCalibs stages"),
    Key("doBossCalibsState",
        Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
        String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
             name="all_states",
             help="state of all the individual stages of this command, " + \
             "as identified by the commandStages keyword.")*(1,6)),
    
    Key("doBossCalibs_nBias",
        Int(name='nBiasDone', help="index of the active bias"),
        Int(name='nBias', help="number of biases requested")),
    Key("doBossCalibs_nDark",
        Int(name='nDarkDone', help="index of the active dark"),
        Int(name='nDark', help="number of darks requested")),
    Key("doBossCalibs_nFlat",
        Int(name='nFlatDone', help="index of the active flat"),
        Int(name='nFlat', help="number of flats requested")),
    Key("doBossCalibs_nArc",
        Int(name='nArcDone', help="index of the active arc"),
        Int(name='nArc', help="number of arcs requested")),
    
    Key("doBossCalibs_darkTime",
        Float(name='darkTime', help="flat exposure time", units="sec"),
        Float(name='default', help="default value", units="sec")),
    Key("doBossCalibs_arcTime",
        Float(name='arcTime', help="arc exposure time", units="sec"),
        Float(name='default', help="default value", units="sec")),
    Key("doBossCalibs_flatTime",
        Float(name='flatTime', help="flat exposure time", units="sec"),
        Float(name='default', help="default value", units="sec")),
    Key("doBossCalibs_guiderFlatTime",
        Float(name='guiderFlatTime', help="guider flat exposure time", units="sec"),
        Float(name='default', help="default value", units="sec")),
    
    Key("doBossScienceStages", String()*(1,6), help="names of the doBossScience stages"),
    Key("doBossScienceState",
        Enum('idle',                'running','done','failed','aborted',
             name="state",
             help="state of the entire command"),
        String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
             name="sub_stage",
             help="state of all the individual stages of this command, " + \
             "as identified by the commandStages keyword.")*(1,6)),
    
    Key("doBossScience_nExp",
        Int(name='nExpDone', help="index of the active exposure"),
        Int(name='nExp', help="number of exposures completed")),
    Key("doBossScience_expTime",
        Float(name='expTime', help="exposure time", units="sec"),
        Float(name='default', help="default", units="sec")),

    Key("doMangaDitherStages", String()*(1,6), help="names of the doMangaDither stages"),
    Key("doMangaDitherState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),
    
    Key("doMangaDither_dither",
        String(name='mangaDither', help="requested mangaDither position"),
        String(name='default', help="default mangaDither position")),
    Key("doMangaDither_expTime",
        Float(name='expTime', help="exposure time", units="sec"),
        Float(name='default', help="default exposure time", units="sec")),
    
    Key("doMangaSequenceStages", String()*(1,6), help="names of the doMangaSequence stages"),
    Key("doMangaSequenceState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),

    Key("doMangaSequence_count",
        Int(name='count', help="number of dither sets requested"),
        Int(name='default', help="default number of dither sets")),
    Key("doMangaSequence_dithers",
        String(name='dithers', help="manga dithers requested"),
        String(name='default', help="default manga dithers")),
    Key("doMangaSequence_expTime",
        Float(name='expTime', help="exposure time", units="sec"),
        Float(name='default', help="default exposure time", units="sec")),
    Key("doMangaSequence_arcTime",
        Float(name='arcTime', help="mid-sequence arc exposure time", units="sec"),
        Float(name='default', help="default arc exposure time", units="sec")),

    Key("doMangaSequence_ditherSeq",
        String(name='ditherSeq', help="Total dither sequence"),
        Int(name='index', help="index of currently-operating dither")),

    Key("doApogeeScienceStages", String()*(1,6), help="names of the doApogeeScience stages"),
    Key("doApogeeScienceState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),
    
    Key("doApogeeScience_ditherPairs",
        String(name='ditherPairs', help="the number of A/B dither pairs"),
        String(name='default', help="default number of dither pairs")),
    Key("doApogeeScience_expTime",
        Float(name='expTime', help="exposure time", units="sec"),
        Float(name='default', help="default", units="sec")),
    Key("doApogeeScience_comment",
        String(name='comment', help="For some FITS headers"),
        String(name='default', help="default value")),
    Key("doApogeeScience_index",
        Int(name='index', help="index of running dither pair"),
        Int(name='nPairs', help="number of requested dither pairs")),

    Key("doApogeeDomeFlatStages", String()*(1,6), help="names of the doApogeeDomeFlat stages"),
    Key("doApogeeDomeFlatState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),

    Key("doApogeeMangaDitherStages", String()*(1,6), help="names of the doApogeeMangaDither stages"),
    Key("doApogeeMangaDitherState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),

    Key("doApogeeMangaDither_mangaDither",
        String(name='mangaDither', help="requested mangaDither position"),
        String(name='default', help="default mangaDither position")),
    Key("doApogeeMangaDither_expTime",
        Float(name='mangaExpTime', help="MaNGA exposure time", units="sec"),
        Float(name='apogeeExpTime', help="APOGEE exposure time", units="sec")),

    Key("doApogeeMangaSequenceStages", String()*(1,6), help="names of the doApogeeMangaSequence stages"),
    Key("doApogeeMangaSequenceState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),

    Key("doApogeeMangaSequence_count",
        Int(name='count',help="number of dither sets requested"),
        Int(name='default',help="default number of dither sets")),
    Key("doApogeeMangaSequence_mangaDithers",
        String(name='mangaDithers', help="MaNGA dithers requested"),
        String(name='default', help="default MaNGA dithers")),

    Key("doApogeeMangaSequence_ditherSeq",
        String(name='mangaDitherSeq', help="Total MaNGA dither sequence"),
        Int(name='index', help="index of currently-operating MaNGA dither")),
    
    Key("doApogeeSkyFlatsStages", String()*(1,6), help="names of the doApogeeSkyFlats stages"),
    Key("doApogeeSkyFlatsState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),
    
    Key("doApogeeSkyFlats_ditherPairs",
        String(name='ditherPairs', help="the number of A/B dither pairs"),
        String(name='default', help="default number of dither pairs")),
    Key("doApogeeSkyFlats_expTime",
        Float(name="time",help="exposure time", units="sec"),
        Float(name="default",help="default", units="sec")),
    Key("doApogeeSkyFlats_index",
        Int(name='index', help="index of running dither pair"),
        Int(name='nPairs', help="number of requested dither pairs")),

    Key("gotoFieldStages", String()*(1,6), help="names of the gotoField stages"),
    Key("gotoFieldState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),
    
    Key("gotoField_arcTime", 
        Float(name="time", help="arc exposure time", units="sec"), 
        Float(name="default", help="default value", units="sec")),
    Key("gotoField_flatTime", 
        Float(name="time",help="flat exposure time", units="sec"), 
        Float(name="default",help="default value", units="sec")),
    Key("gotoField_guiderTime", 
        Float(name="time",help="guider exposure time", units="sec"), 
        Float(name="default", help="default value", units="sec")),
    Key("gotoField_guiderFlatTime", 
        Float(name="time",help="guider flat exposure time", units="sec"), 
        Float(name="default",help="default value", units="sec")),
    
    Key("gotoInstrumentChangeStages", String()*(1,6), help="names of the gotoInstrumentChange stages"),
    Key("gotoInstrumentChangeState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),

    Key("gotoStowStages", String()*(1,6), help="names of the gotoStow stages"),
    Key("gotoStowState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),

    Key("gotoGangChangeStages", String()*(1,6), help="names of the gotoGangChange stages"),
    Key("gotoGangChangeState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),
    Key("gotoGangChange_alt",
        Float(name="alt",help="desired altitude to slew to", units="deg"),
        Float(name="default", help="default", units="deg")),
    
    Key("ditheredFlatChangeStages", String()*(1,6), help="names of the ditheredFlatChange stages"),
    Key("ditheredFlatChangeState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),
    
    Key("ditheredFlat_expTime", 
        Float(name="time", help="exposure time", units="sec"), 
        Float(name="default", help="default", units="sec")),
# MISSING KEYS due to unknown format: nStep, nTick (these want defaults!), sp1 and sp2
    
    Key("hartmannStages", String()*(1,6), help="names of the hartmann stages"),
    Key("hartmannState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),
    
    Key("hartmann_expTime", 
        Float(name="time",help="exposure time", units="sec"), 
        Float(name="default", help="default", units="sec")),
# MISSING KEYS due to unknown format: sp1 and sp2
    
    Key("lampsOffStages", String()*(1,6), help="names of the lampsOff stages"),
    Key("lampsOffState",
       Enum('idle',                'running','done','failed','aborted',
            name="state",
            help="state of the entire command"),
       String(name="text", help="perhaps useful text to be displayed"),
        Enum('idle','off','pending','prepping','running','done','failed','aborted',
            name="sub_state",
            help="state of all the individual stages of this command, " + \
                 "as identified by the commandStages keyword.")*(1,6)),

    Key("availableScripts", String("name")*(1,),
        help="List of available SOP scripts."),
    Key("scriptState",
        String(name="name",help="Name of currently active SOP script."),
        Int(name="atStep",help="Currently active line number."),
        Int(name="length",help="Total length of this script."),
        Enum('idle','aborted','stopped','done','running',name="status",help="Current state of this script."),
        String(name="currentLine",help="The currently active line as a string."),
        help="status of currently active SOP script."),
    Key("scriptLine",
        String(name="name",help="Name of currently active SOP script."),
        Int(name="atStep",help="Line number."),
        Float(name="maxTime",help="Maximum time allowed for this step."),
        String(name="line",help="This script line as a string."),
        help="lines in currently active SOP script."),
)
